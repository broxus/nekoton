(function() {
    var type_impls = Object.fromEntries([["nekoton_abi",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-StackItem\" class=\"impl\"><a href=\"#impl-Clone-for-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for StackItem</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; StackItem</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","nekoton_abi::tvm::StackItem"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-StackItem\" class=\"impl\"><a href=\"#impl-Debug-for-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for StackItem</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","nekoton_abi::tvm::StackItem"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-StackItem\" class=\"impl\"><a href=\"#impl-Default-for-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for StackItem</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; StackItem</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.87.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","nekoton_abi::tvm::StackItem"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-StackItem\" class=\"impl\"><a href=\"#impl-Display-for-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for StackItem</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","nekoton_abi::tvm::StackItem"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-StackItem\" class=\"impl\"><a href=\"#impl-Drop-for-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for StackItem</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.87.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","nekoton_abi::tvm::StackItem"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-StackItem\" class=\"impl\"><a href=\"#impl-PartialEq-for-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for StackItem</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;StackItem) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","nekoton_abi::tvm::StackItem"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackItem\" class=\"impl\"><a href=\"#impl-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl StackItem</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">default</a>() -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new default stack item</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.builder\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">builder</a>(builder: BuilderData) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as builder</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cell\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cell</a>(cell: Cell) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as cell</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dict\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dict</a>(dict: &amp;impl HashmapType) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as cell</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.continuation\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">continuation</a>(continuation: ContinuationData) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as continuation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.int\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">int</a>(integer: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;IntegerData&gt;) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as integer</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">integer</a>(integer: IntegerData) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as integer with internal data</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nan\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">nan</a>() -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as integer not a number</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boolean\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">boolean</a>(boolean: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a>) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as bool</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">slice</a>(slice: SliceData) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as slice</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tuple\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">tuple</a>(tuple: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StackItem&gt;) -&gt; StackItem</h4></section></summary><div class=\"docblock\"><p>new stack item as tuple</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bool\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_bool</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns integer not equal to zero\nChecks type and NaN</p>\n</div></details><section id=\"method.as_builder\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_builder</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;BuilderData, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_builder_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_builder_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BuilderData, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts builder to modify, exceptions should not be after\nIf is single reference it will not clone on write</p>\n</div></details><section id=\"method.as_cell\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_cell</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Cell, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.as_continuation\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_continuation</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;ContinuationData, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.as_continuation_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_continuation_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut ContinuationData, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_dict\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_dict</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Cell&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns type D None or Cell</p>\n</div></details><section id=\"method.as_integer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_integer</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;IntegerData, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.as_small_integer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_small_integer</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.as_integer_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_integer_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut IntegerData, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;SliceData, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.as_tuple\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_tuple</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[StackItem], <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.tuple_item\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">tuple_item</a>(\n    &amp;self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>,\n    default: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StackItem, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.tuple_item_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">tuple_item_ref</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;StackItem, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_tuple_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_tuple_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StackItem&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extracts tuple to modify, exceptions should not be after\nIf is single reference it will not clone on write</p>\n</div></details><section id=\"method.withdraw_tuple_part\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">withdraw_tuple_part</a>(\n    &amp;mut self,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StackItem&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_grams\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_grams</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.u128.html\">u128</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns integer as grams and checks range 0..2^120</p>\n</div></details><section id=\"method.is_null\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_null</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_slice</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_tuple\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_tuple</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_continuation\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_continuation</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.withdraw\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">withdraw</a>(&amp;mut self) -&gt; StackItem</h4></section><section id=\"method.dump_as_fift\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">dump_as_fift</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section><section id=\"method.deserialize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">deserialize</a>(\n    slice: SliceData,\n    gas_consumer: &amp;mut dyn GasConsumer,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StackItem, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></div></details>",0,"nekoton_abi::tvm::StackItem"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackItem\" class=\"impl\"><a href=\"#impl-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl StackItem</h3></section></summary><div class=\"impl-items\"><section id=\"method.serialize_old\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">serialize_old</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(BuilderData, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>), <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section><section id=\"method.deserialize_old\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">deserialize_old</a>(slice: &amp;mut SliceData) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(StackItem, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.i64.html\">i64</a>), <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></div></details>",0,"nekoton_abi::tvm::StackItem"],["<section id=\"impl-StructuralPartialEq-for-StackItem\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-StackItem\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for StackItem</h3></section>","StructuralPartialEq","nekoton_abi::tvm::StackItem"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[25912]}