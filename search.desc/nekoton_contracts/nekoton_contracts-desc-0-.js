searchState.loadedDescShard("nekoton_contracts", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns top level domain name\nReturns full domain path\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns full domain path\nReturns optional certificate record\nReturns a certificate address derived from the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalled by token wallet on burn\nReturns the number of decimals the token uses - e.g. 8, …\nReturns the name of the token - e.g. <code>MyToken</code>.\nReturns the symbol of the token. E.g. “HIX”.\nReturns the total token supply.\nReturns the token wallet code.\nCalled by root token contract on mint\nCalled by another token wallet on transfer\nReturns the token wallet balance.\nReturns the token root address.\nReturns the token wallet code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalled by token wallet on burn\nDeploy new <code>TokenWallet</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMint tokens to recipient with deploy wallet optional\nGet root owner\nDerive <code>TokenWallet</code> address from owner address\nAccept minted tokens from root\nCallback for transfer operation\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet token wallet owner address\nTransfer tokens and optionally deploy token wallet for the …\nTransfer tokens using token wallet address\nTODO: fill docs\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThird iteration of token wallets, but with fixed bugs …\nLatest iteration with completely new standard …\nDecimals\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve details using specified version\nCalculates token wallet address\nTries to guess version and retrieve details\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFull currency name\nRoot owner contract address. Used as proxy address in …\nOwner wallet address\nLinked root token contract address\nShort currency name\nToken ecosystem version\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComputes NFT address by unique NFT id\nGet the NFT code\nGet the NFT code hash\nGet count of active NFTs for this collection\nChange NFT manager\nChange NFT owner\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet NFT info\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange NFT owner and manager\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet NFT metadata in JSON format\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuild url to get metadata for NFT.\nGet URL parts identifying the NFT.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet contract index basis code\nGet contract index basis code hash\nGet contract index code\nGet contract index code hash\nGet contract index basis\nReturns the argument unchanged.\nGet NFT info\nCalls <code>U::from(self)</code>.\nGet contract index code\nGet contract index code hash\nResolve contract index\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA contract that is compliant with TIP6 shall implement the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")