(function() {var implementors = {};
implementors["nekoton"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/core/keystore/enum.KeyStoreError.html\" title=\"enum nekoton::core::keystore::KeyStoreError\">KeyStoreError</a>","synthetic":false,"types":["nekoton::core::keystore::KeyStoreError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/core/models/enum.TransactionError.html\" title=\"enum nekoton::core::models::TransactionError\">TransactionError</a>","synthetic":false,"types":["nekoton::core::models::TransactionError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/core/models/enum.MessageBodyError.html\" title=\"enum nekoton::core::models::MessageBodyError\">MessageBodyError</a>","synthetic":false,"types":["nekoton::core::models::MessageBodyError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/core/models/enum.MessageFlagsError.html\" title=\"enum nekoton::core::models::MessageFlagsError\">MessageFlagsError</a>","synthetic":false,"types":["nekoton::core::models::MessageFlagsError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/core/owners_cache/enum.OwnersCacheError.html\" title=\"enum nekoton::core::owners_cache::OwnersCacheError\">OwnersCacheError</a>","synthetic":false,"types":["nekoton::core::owners_cache::OwnersCacheError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/core/transactions_tree/enum.TransactionTreeError.html\" title=\"enum nekoton::core::transactions_tree::TransactionTreeError\">TransactionTreeError</a>","synthetic":false,"types":["nekoton::core::transactions_tree::TransactionTreeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/core/utils/enum.BlockParsingError.html\" title=\"enum nekoton::core::utils::BlockParsingError\">BlockParsingError</a>","synthetic":false,"types":["nekoton::core::utils::BlockParsingError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/crypto/enum.EncryptedKeyError.html\" title=\"enum nekoton::crypto::EncryptedKeyError\">EncryptedKeyError</a>","synthetic":false,"types":["nekoton::crypto::encrypted_key::EncryptedKeyError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/crypto/enum.LedgerKeyError.html\" title=\"enum nekoton::crypto::LedgerKeyError\">LedgerKeyError</a>","synthetic":false,"types":["nekoton::crypto::ledger_key::LedgerKeyError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton/transport/gql/enum.NodeClientError.html\" title=\"enum nekoton::transport::gql::NodeClientError\">NodeClientError</a>","synthetic":false,"types":["nekoton::transport::gql::NodeClientError"]}];
implementors["nekoton_abi"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton_abi/enum.UnpackerError.html\" title=\"enum nekoton_abi::UnpackerError\">UnpackerError</a>","synthetic":false,"types":["nekoton_abi::token_unpacker::UnpackerError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton_abi/enum.TokensJsonError.html\" title=\"enum nekoton_abi::TokensJsonError\">TokensJsonError</a>","synthetic":false,"types":["nekoton_abi::tokens_json::TokensJsonError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton_abi/enum.ExtractionError.html\" title=\"enum nekoton_abi::ExtractionError\">ExtractionError</a>","synthetic":false,"types":["nekoton_abi::ExtractionError"]}];
implementors["nekoton_contracts"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"nekoton_contracts/struct.NonZeroResultCode.html\" title=\"struct nekoton_contracts::NonZeroResultCode\">NonZeroResultCode</a>","synthetic":false,"types":["nekoton_contracts::NonZeroResultCode"]}];
implementors["nekoton_utils"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nekoton_utils/enum.SymmetricCryptoError.html\" title=\"enum nekoton_utils::SymmetricCryptoError\">SymmetricCryptoError</a>","synthetic":false,"types":["nekoton_utils::encryption::SymmetricCryptoError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"nekoton_utils/struct.UnknownEnumVariant.html\" title=\"struct nekoton_utils::UnknownEnumVariant\">UnknownEnumVariant</a>","synthetic":false,"types":["nekoton_utils::UnknownEnumVariant"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()